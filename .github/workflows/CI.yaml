name: CI (Linting, Testing, Building)

on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
        go-version: [1.21.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Go and Node.js
        uses: ./.github/actions/setup-go-node
        with:
          go-version: ${{ matrix.go-version }}
          node-version: ${{ matrix.node-version }}
          yarn-cache: true 
        id: setup

      - name: Install Node.js dependencies
        run: |
          cd client
          yarn install

      - name: Lint React Native code
        run: |
          cd client
          yarn lint

      - name: Lint Go code
        run: |
          cd server
          golangci-lint run ./...

  build-postgres:
    runs-on: ubuntu-latest
    needs: lint

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: legacy
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: [lint, build-postgres]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Go and Node.js
        uses: ./.github/actions/setup-go-node
        with:
          go-version: ${{ matrix.go-version }}
          node-version: ${{ matrix.node-version }}
          yarn-cache: true 
        id: setup

      - name: Install Node.js dependencies
        run: |
          cd client
          yarn install

      - name: Run React Native tests
        run: |
          cd client
          yarn test

      - name: Run PostgreSQL migrations
        run: |
          cd scripts
          ./verify_os.sh

      - name: Run Go tests
        run: |
          cd server/tests
          go test ./...

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [lint, build-postgres, test]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Go and Node.js
        uses: ./.github/actions/setup-go-node
        with:
          go-version: ${{ matrix.go-version }}
          node-version: ${{ matrix.node-version }}
          yarn-cache: true 
        id: setup

      - name: Install Node.js dependencies
        run: |
          cd client
          yarn install

      - name: Build Go app
        run: |
          cd server
          go build -v ./src/...
